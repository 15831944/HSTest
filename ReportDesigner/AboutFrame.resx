<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAaRJREFUWEe9lt1x
        xCAMhCklpVBKSnEpfkod95wqXEI6IBbHYhkk/s+e0ZzPY7Qf0oIxZvxy40PnRzrnDAEg5jN2ZPDiPJ4E
        ycSfBCmKfxqkWRwgx77OH0PiiwFOBn/dzSf9J2FEMGeHv+VXY0JgaCBcfGkF0sQSSPrOCgDsdLECGogk
        Pgvgfn7/4k6nCdSej3rAiyMoSU2oUoGub8ZNHFWYATi+t+ZvRia+CoAgaiCi+AyAb10Q5r+b8AVVxUeN
        WBJ/feVbdFzW3HzpPT65NT9k4tvLHWeQMM1eBIAYSDQQY+xpKAp5ZbSIFwFKINZaR8EhOIi/D7P1PRdm
        jiqk+4PqAVQE4inAbq9jGd3DbBjHy97UAq30JQAS5uLc8SQqQTRXAEAc4KrCW1gTJ5BHAKS1jmcfA3hX
        Qd5oWluw75ujoCNIcSOiNqQt6AVIDQjxCFCDyD1wub+lBXz5cXEA4CDmyyqthPsqOI0XyhcSqO3gHqDc
        JXF+GsxArk0oT8J6mYEAoEdcBEHP0xmkJQyDIwi23daZa8dnn7BRPJvArPj0mb6W4B/CeUnjw2NbFAAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAIAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAACBAAAAgYAAAIIAAACCgAAAg
        wAAAIOAAAEAAAABAIAAAQEAAAEBgAABAgAAAQKAAAEDAAABA4AAAYAAAAGAgAABgQAAAYGAAAGCAAABg
        oAAAYMAAAGDgAACAAAAAgCAAAIBAAACAYAAAgIAAAICgAACAwAAAgOAAAKAAAACgIAAAoEAAAKBgAACg
        gAAAoKAAAKDAAACg4AAAwAAAAMAgAADAQAAAwGAAAMCAAADAoAAAwMAAAMDgAADgAAAA4CAAAOBAAADg
        YAAA4IAAAOCgAADgwAAA4OAAQAAAAEAAIABAAEAAQABgAEAAgABAAKAAQADAAEAA4ABAIAAAQCAgAEAg
        QABAIGAAQCCAAEAgoABAIMAAQCDgAEBAAABAQCAAQEBAAEBAYABAQIAAQECgAEBAwABAQOAAQGAAAEBg
        IABAYEAAQGBgAEBggABAYKAAQGDAAEBg4ABAgAAAQIAgAECAQABAgGAAQICAAECAoABAgMAAQIDgAECg
        AABAoCAAQKBAAECgYABAoIAAQKCgAECgwABAoOAAQMAAAEDAIABAwEAAQMBgAEDAgABAwKAAQMDAAEDA
        4ABA4AAAQOAgAEDgQABA4GAAQOCAAEDgoABA4MAAQODgAIAAAACAACAAgABAAIAAYACAAIAAgACgAIAA
        wACAAOAAgCAAAIAgIACAIEAAgCBgAIAggACAIKAAgCDAAIAg4ACAQAAAgEAgAIBAQACAQGAAgECAAIBA
        oACAQMAAgEDgAIBgAACAYCAAgGBAAIBgYACAYIAAgGCgAIBgwACAYOAAgIAAAICAIACAgEAAgIBgAICA
        gACAgKAAgIDAAICA4ACAoAAAgKAgAICgQACAoGAAgKCAAICgoACAoMAAgKDgAIDAAACAwCAAgMBAAIDA
        YACAwIAAgMCgAIDAwACAwOAAgOAAAIDgIACA4EAAgOBgAIDggACA4KAAgODAAIDg4ADAAAAAwAAgAMAA
        QADAAGAAwACAAMAAoADAAMAAwADgAMAgAADAICAAwCBAAMAgYADAIIAAwCCgAMAgwADAIOAAwEAAAMBA
        IADAQEAAwEBgAMBAgADAQKAAwEDAAMBA4ADAYAAAwGAgAMBgQADAYGAAwGCAAMBgoADAYMAAwGDgAMCA
        AADAgCAAwIBAAMCAYADAgIAAwICgAMCAwADAgOAAwKAAAMCgIADAoEAAwKBgAMCggADAoKAAwKDAAMCg
        4ADAwAAAwMAgAMDAQADAwGAAwMCAAMDAoADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAra2tra0AAAAAAAAA
        AACtra2tAAAAAAAAAAAAAAAACVIAra2tra0AAAAAAACfDgCtra2tAAAAAAAAAAAACQkJUlIAra2tra2t
        AACfn58ODgCtra2tAAAAAAAACQkJCQlSUlIAra2tAACfn5+fnw4OAQCtra2tAAAACQkJCQkJCVJSUlIA
        AACfn5+fn5+fDg4OAQCtra2tAAkJCQkJCQkJUlJSUlIAn5+fn5+fn58ODg4BDgCtra0ACQkJCQkJCQlS
        UlJSUgCfn5+fn5+fnw4OAQ4OAQCtrQAJCQkJCQkJCVJSUlJAABWfn5+fn5+fDg4BDg4BAAAAAAkJCQkJ
        CQkJUlJSUkAAFRWfn5+fn58ODgEODgEAAAAACQkJCQkJCQlSUlJAQAAVFRWfn5+fnw4OAQ4OAQAAAAAJ
        CQkJCQn//1JSUkBAABUAABWfn///DgEODgEOAAAAAAkJCQn//wkJCVJSQEAAAC8vAOfnn+fnDgEODgEA
        AAAACQn//wkJCQkJCUBAAC8vLy8vAJ+fn+fnDgEODgAAAAD//wkJCQkJCQkAAC8vLy8vLy8vAJ+fn+fn
        DgEOAAAAAAkJCQkJCQkAAC8vLy8vLy8vLy8vAJ+fn5+fAQ4AAAAAAAkJCQkJCQAvLy8vLy8vLy8vLy8v
        AJ+fn5+fAQAAAAAAAAkJCQkJAC8vLy8vLy8vLy8vLy8vAJ+fnwAAAAAAAAAAAAkJCQkALy8vLy8vLy8v
        Ly8vLy8AnwAAAAAAAAAAAAAAAAkJCQAvLy8vLy8vLy8vLy8vLwAAAAAAAAAAAAAAAAAAAAkAAC8vLy8v
        Ly8vLy8vLy8vAAAAAAAAAAAAAAAAAAAAAAAALy8vLy8v//8vLy8vLy8AAAAAAAAAAAAAAAAAAAAAAAAv
        Ly8v///7+/svLy8vLwAAAAAAAAAAAAAAAAAAAAAAAC8v///7+/v7+/svLy8vAAAAAAAAAAAAAAAAAAAA
        AAAA///7+/v7+/v7+/svLy8AAAAAAAAAAAAAAAAAAAAAAAD7+/v7+/v7+/v7+/svLwAAAAAAAAAAAAAA
        AAAAAAAAAAD7+/v7+/v7+/v7+/svAAAAAAAAAAAAAAAAAAAAAAAAAAD7+/v7+/v7+/v7AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD7+/v7+/v7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD7+/v7AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////AfwP/ADwB/AAAAPAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAOAAAADwAAAB+AAAB/wAAB/+AAA//0AAP//AAD//wAA//8AAP//AAD//4AA///A
        Af//4Af///Af///4f////f//
</value>
  </data>
</root>